---
apiVersion: v1
kind: Service
metadata:
  name: ${K8S_SERVICE_NAME}
  annotations:
      prometheus.io/scrape: 'false'  # get metrics from indiv pods
spec:
  selector:
    app: ${K8S_SERVICE_NAME}
  type: ClusterIP
  ports:
    - port: 10100
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: ${K8S_SERVICE_NAME}
spec:
  replicas: ${K8S_SERVICE_LIMIT_N_REPLICAS}
  selector:
    matchLabels:
      app: ${K8S_SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${K8S_SERVICE_NAME}
    spec:
      imagePullSecrets:
        - name: gcr-json-key
      volumes:
        - name: app-${K8S_SERVICE_NAME}-gcp-creds
          secret:
            secretName: app-${K8S_SERVICE_NAME}-gcp-creds
      containers:
      - name: ${K8S_SERVICE_NAME}
        image: gcr.io/elixir-core-prod/${K8S_SERVICE_NAME}:${K8S_SERVICE_VERSION}
        args: [
          "start",
          "--storagePostgres",
          "--dbURL", "postgres://$(${K8S_SERVICE_NAME_UPPER}_DBUSER)@127.0.0.1:5432/${K8S_SERVICE_NAME}?sslmode=disable"
        ]
        ports:
          - name: service
            containerPort: 10100
          - name: metrics
            containerPort: 10101
          - name: profiler
            containerPort: 10102
        volumeMounts:
          - name: app-${K8S_SERVICE_NAME}-gcp-creds
            mountPath: /var/secrets/gcp
            readOnly: true
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/secrets/gcp/creds.json
          - name: ${K8S_SERVICE_NAME_UPPER}_DBUSER
            valueFrom:
              secretKeyRef:
                name: app-catalog-db-creds
                key: user
          - name: ${K8S_SERVICE_NAME_UPPER}_DBPASSWORD
            valueFrom:
              secretKeyRef:
                name: app-catalog-db-creds
                key: password
        resources:
          limits:
            memory: ${K8S_SERVICE_LIMIT_MEM}
            cpu: ${K8S_SERVICE_LIMIT_CPU}
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: [
          "/cloud_sql_proxy",
          "-instances=${TF_VAR_gcp_project}:${TF_VAR_region}:${TF_VAR_primary_db_name}=tcp:5432",
          "-credential_file=/var/secrets/gcp/creds.json"
        ]
        volumeMounts:
          - name: app-catalog-gcp-creds
            mountPath: /var/secrets/gcp
            readOnly: true
